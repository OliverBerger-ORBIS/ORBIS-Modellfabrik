metadata:
  version: "2.1.0"
  last_updated: "2025-10-09"
  author: "OMF Development Team"
  description: |
    MQTT-Client Konfiguration für OMF2 Domain Clients
    
    WICHTIG - Semantik:
    - published_topics: Topics die der Domain-Client AKTIV publiziert
    - subscribed_topics: Topics die der Domain-Client beim Broker subscribed
    - gateway_routing_hints: Topics die vom Gateway an Business-Functions geroutet werden
    
    HINWEIS:
    - Dies ist ein "Living Document" für die Entwicklung
    - Die finale Routing-Logik ist im Code (Gateway.onMessage)
    - Diese YML dient als Planungs- und Validierungshilfe
    
    Verified gegen: txt.yml, ccu.yml, module.yml, fts.yml, nodered.yml (2025-10-09)

# MQTT-Client-Konfiguration
mqtt_clients:
  # Admin MQTT Client
  admin_mqtt_client:
    active: true
    client_class: "AdminMqttClient"
    client_id: "omf_admin"  
    # functions: ["template_generation", "system_monitoring", "debug_tools"]
    published_topics:
      # Admin publiziert ALLES (Wildcard '*')
      - "*"
    subscribed_topics:
      # Admin subscribiert ALLES (Wildcard '#')
      - "#"

  # CCU Domain Client (Frontend UI + Backend Orchestration)
  # WICHTIG: OMF2 kombiniert Frontend und Backend in einer Domain
  #   - Frontend Topics (MUSS): User-Interaktionen, Dashboards
  #   - Backend Topics (KANN): Orchestrierung, Business-Logic (parallel zu APS-CCU-Backend)
  ccu_mqtt_client:
    active: true
    client_class: "CcuMqttClient"
    module_path: "omf2.ccu.ccu_mqtt_client"
    client_id: "omf_ccu"  # Dynamisch, wechselt bei jeder Anmeldung
    published_topics:
      # ==============================================================================
      # APS-CCU-FRONTEND Topics (MUSS - für UI-Funktionalität)
      # ==============================================================================
      - "ccu/order/request"          # User-Order-Trigger (Dashboard "Bestellen")
      - "ccu/set/reset"               # System-Reset (Dashboard Control)
      - "ccu/global"                  # Global Commands (Dashboard Control)
      - "ccu/control"                 # Control Commands (Dashboard)
      - "ccu/control/command"         # Specific Control Commands
      - "ccu/control/order"           # Order Control Commands
      
      # ==============================================================================
      # APS-CCU-BACKEND Topics (KANN - für Orchestrierung, optional zu APS-CCU-Backend)
      # ==============================================================================
      # CCU State Topics (Backend publiziert System-State):
      - "ccu/state"                   # General System State
      - "ccu/state/flow"              # Production Flow State
      - "ccu/state/status"            # System Status
      - "ccu/state/error"             # Error State
      - "ccu/state/stock"             # HBW Inventory State (sync mit /j1/txt/1/f/i/stock)
      - "ccu/state/version-mismatch"  # Version Mismatch Detection
      - "ccu/state/layout"            # Factory Layout State
      - "ccu/state/config"            # General Configuration
      - "ccu/state/flows"             # Production Flows (BLUE, RED, WHITE)
      
      # CCU Status Topics (Backend publiziert Service-Health):
      - "ccu/status"                  # Service Status
      - "ccu/status/connection"       # Connection Status
      - "ccu/status/health"           # Health Check
      
      # CCU Order Topics (Backend Orchestrierung):
      - "ccu/order/response"          # Order Confirmation mit UUID (nach order/request)
      - "ccu/order/active"            # Active Orders Queue
      - "ccu/order/completed"         # Completed Orders Log
      
      # CCU Pairing Topics (Backend Module-Management):
      - "ccu/pairing/state"           # Module/FTS Availability State (high-frequency)
      
      # Module Order Topics (Backend Orchestrierung):
      - "module/v1/ff/SVR3QA0022/order"      # HBW Production Commands (PICK/DROP)
      - "module/v1/ff/SVR4H76449/order"      # DRILL Production Commands
      - "module/v1/ff/SVR3QA2098/order"      # MILL Production Commands
      - "module/v1/ff/SVR4H76530/order"      # AIQS Production Commands (CHECK_QUALITY)
      - "module/v1/ff/SVR4H73275/order"      # DPS Production Commands
      
      # FTS Order Topics (Backend Navigation):
      - "fts/v1/ff/5iO4/order"        # FTS Navigation Orders (mit UUID)
      
      # ==============================================================================
      # TXT Topics - Commands TO TXT-Controller (KANN - für TXT-Steuerung)
      # ==============================================================================
      # TXT Function Input (Commands TO TXT):
      - "/j1/txt/1/f/i/order"         # Order TO TXT (optional, parallel zu ccu/order/request)
      - "/j1/txt/1/f/i/status"        # Status Request TO TXT
      - "/j1/txt/1/f/i/error"         # Error Notification TO TXT
      - "/j1/txt/1/f/i/config/hbw"    # HBW Configuration TO TXT
      
      # TXT Control Topics (Sensor-Steuerung TO TXT):
      - "/j1/txt/1/c/bme680"          # BME680 Sensor Control
      - "/j1/txt/1/c/cam"             # Camera Control
      - "/j1/txt/1/c/ldr"             # LDR Sensor Control
    subscribed_topics:
      # ==============================================================================
      # CCU-Backend Topics (für Backend-Orchestrierung)
      # ==============================================================================
      - "ccu/order/request"           # Order Trigger (kann auch von extern kommen)
      - "ccu/order/response"          # Order Confirmation (wenn APS-CCU-Backend parallel läuft)
      - "ccu/order/active"            # Active Orders (State-Sync)
      - "ccu/order/completed"         # Completed Orders (State-Sync)
      - "ccu/pairing/state"           # Module/FTS Availability (wenn APS-CCU-Backend parallel läuft)
      - "ccu/state/stock"             # Stock State (State-Sync)
      
      # ==============================================================================
      # FTS Topics (für FTS-Tracking und Order-Progress)
      # ==============================================================================
      - "fts/v1/ff/5iO4/state"        # FTS State (position, battery, actionState)
      - "fts/v1/ff/5iO4/connection"   # FTS Connection Status (LWT)
      - "fts/v1/ff/5iO4/factsheet"    # FTS Capabilities
      
      # ==============================================================================
      # Module Topics - Direct Telemetry (State/Connection/Factsheet)
      # ==============================================================================
      # HBW (via NodeRed - no TXT):
      - "module/v1/ff/SVR3QA0022/state"
      - "module/v1/ff/SVR3QA0022/connection"
      - "module/v1/ff/SVR3QA0022/factsheet"
      
      # DRILL (via NodeRed - no TXT):
      - "module/v1/ff/SVR4H76449/state"
      - "module/v1/ff/SVR4H76449/connection"
      - "module/v1/ff/SVR4H76449/factsheet"
      
      # MILL (via NodeRed - no TXT):
      - "module/v1/ff/SVR3QA2098/state"
      - "module/v1/ff/SVR3QA2098/connection"
      - "module/v1/ff/SVR3QA2098/factsheet"
      
      # AIQS (direct from TXT - fast telemetry):
      - "module/v1/ff/SVR4H76530/state"
      - "module/v1/ff/SVR4H76530/connection"
      - "module/v1/ff/SVR4H76530/factsheet"
      
      # DPS (direct from TXT - fast telemetry):
      - "module/v1/ff/SVR4H73275/state"
      - "module/v1/ff/SVR4H73275/connection"
      - "module/v1/ff/SVR4H73275/factsheet"
      
      # CHRG (Charger):
      - "module/v1/ff/CHRG0/state"
      - "module/v1/ff/CHRG0/connection"
      - "module/v1/ff/CHRG0/factsheet"
      
      # ==============================================================================
      # TXT Topics - FROM TXT-Controller (Telemetry)
      # ==============================================================================
      # TXT Function Output (FROM TXT):
      - "/j1/txt/1/f/o/order"         # Order FROM TXT (optional order trigger)
      - "/j1/txt/1/f/o/stock"         # Stock FROM TXT (HBW inventory)
      - "/j1/txt/1/f/o/status"        # Status FROM TXT
      - "/j1/txt/1/f/o/error"         # Error FROM TXT
      
      # TXT Sensor Data (FROM TXT-AIQS):
      - "/j1/txt/1/i/bme680"          # BME680 Sensor-Daten
      - "/j1/txt/1/i/cam"             # Camera-Daten
      - "/j1/txt/1/i/ldr"             # LDR Sensor-Daten

    
    # ==============================================================================
    # GATEWAY-ROUTING-HINTS für Business-Functions
    # ==============================================================================
    # SEMANTIK:
    #   - Diese Topics MÜSSEN im Domain-Client subscribed sein (siehe subscribed_topics oben)
    #   - UND werden vom Gateway an die jeweilige Business-Function geroutet
    #   - Das Gateway empfängt über onMessage() und leitet weiter
    # 
    # WICHTIG:
    #   - Business-Functions machen KEINE eigene MQTT-Subscription!
    #   - Sie erhalten Topics vom Gateway via onMessage()
    #   - Validierung: Alle routed_topics MÜSSEN in ccu_mqtt_client.subscribed_topics sein
    # ==============================================================================
    gateway_routing_hints:
      sensor_manager:
        routed_topics:  # Topics die an SensorManager.onMessage() geroutet werden
          - "/j1/txt/1/i/bme680"    # BME680 Sensor-Daten (TXT-AIQS)
          - "/j1/txt/1/i/ldr"       # LDR Sensor-Daten (TXT-AIQS)
          - "/j1/txt/1/i/cam"       # Camera-Daten (TXT-AIQS)
      
      module_manager:
        routed_topics:  # Topics die an ModuleManager.onMessage() geroutet werden
          # Direkte Module Topics (State/Connection/Factsheet)
          # HBW (via NodeRed - no TXT):
          - "module/v1/ff/SVR3QA0022/state"
          - "module/v1/ff/SVR3QA0022/connection"
          - "module/v1/ff/SVR3QA0022/factsheet"
          # DRILL (via NodeRed - no TXT):
          - "module/v1/ff/SVR4H76449/state"
          - "module/v1/ff/SVR4H76449/connection"
          - "module/v1/ff/SVR4H76449/factsheet"
          # MILL (via NodeRed - no TXT):
          - "module/v1/ff/SVR3QA2098/state"
          - "module/v1/ff/SVR3QA2098/connection"
          - "module/v1/ff/SVR3QA2098/factsheet"
          # AIQS (direct from TXT - fast telemetry):
          - "module/v1/ff/SVR4H76530/state"
          - "module/v1/ff/SVR4H76530/connection"
          - "module/v1/ff/SVR4H76530/factsheet"
          # DPS (direct from TXT - fast telemetry):
          - "module/v1/ff/SVR4H73275/state"
          - "module/v1/ff/SVR4H73275/connection"
          - "module/v1/ff/SVR4H73275/factsheet"
          # CHRG (Charger):
          - "module/v1/ff/CHRG0/state"
          - "module/v1/ff/CHRG0/connection"
          - "module/v1/ff/CHRG0/factsheet"
          # FTS Topics (direct from TXT-FTS):
          - "fts/v1/ff/5iO4/state"
          - "fts/v1/ff/5iO4/connection"
          - "fts/v1/ff/5iO4/factsheet"
      
      order_manager:
        routed_topics:  # Topics die an OrderManager.onMessage() geroutet werden
          - "/j1/txt/1/f/o/stock"      # HBW Inventory FROM TXT (Stock-Management)

      production_order_manager:
        routed_topics:  # Topics die an ProductionOrderManager.onMessage() geroutet werden
          - "ccu/order/request"         # PRIMARY trigger for new orders
          - "ccu/order/response"        # Order confirmation with UUID
          - "ccu/order/active"          # Active orders queue
          - "ccu/order/completed"       # Completed orders log
          - "fts/v1/ff/5iO4/state"      # FTS state for order tracking
          - "module/v1/ff/SVR3QA0022/state"  # HBW state for PICK/DROP tracking
          - "module/v1/ff/SVR4H76530/state"  # AIQS state for CHECK_QUALITY tracking
          - "module/v1/ff/SVR4H73275/state"  # DPS state for DROP tracking


  # Node-RED Publisher (OPC-UA → MQTT Bridge + State Enrichment)
  # HINWEIS: Basierend auf APS-NodeRed Architektur (verified)
  #   - Liest OPC-UA von Modulen
  #   - Publiziert enriched States via MQTT (mit orderId aus Workflow-Context)
  #   - Für Module OHNE TXT: EINZIGE MQTT-Quelle
  #   - Für Module MIT TXT: ZUSÄTZLICHE enriched States (parallel zu TXT-Direct)
  nodered_pub_mqtt_client:
    active: false
    client_class: "NoderedPubMqttClient"
    client_id: "omf_nodered_pub"  # Dynamisch
    published_topics:
      # ==============================================================================
      # NodeRed-Enriched Module States (OPC-UA → MQTT)
      # ==============================================================================
      # HBW (no TXT - NodeRed ist EINZIGE MQTT-Quelle):
      - "module/v1/ff/NodeRed/SVR3QA0022/state"
      - "module/v1/ff/NodeRed/SVR3QA0022/connection"
      - "module/v1/ff/NodeRed/SVR3QA0022/factsheet"
      
      # DRILL (no TXT - NodeRed ist EINZIGE MQTT-Quelle):
      - "module/v1/ff/NodeRed/SVR4H76449/state"
      - "module/v1/ff/NodeRed/SVR4H76449/connection"
      - "module/v1/ff/NodeRed/SVR4H76449/factsheet"
      
      # MILL (no TXT - NodeRed ist EINZIGE MQTT-Quelle):
      - "module/v1/ff/NodeRed/SVR3QA2098/state"
      - "module/v1/ff/NodeRed/SVR3QA2098/connection"
      - "module/v1/ff/NodeRed/SVR3QA2098/factsheet"
      
      # AIQS (has TXT - NodeRed publiziert ENRICHED States mit orderId):
      - "module/v1/ff/NodeRed/SVR4H76530/state"
      - "module/v1/ff/NodeRed/SVR4H76530/connection"
      - "module/v1/ff/NodeRed/SVR4H76530/factsheet"
      
      # DPS (has TXT - NodeRed publiziert ENRICHED States mit orderId):
      - "module/v1/ff/NodeRed/SVR4H73275/state"
      - "module/v1/ff/NodeRed/SVR4H73275/connection"
      - "module/v1/ff/NodeRed/SVR4H73275/factsheet"
      
      # CHRG (Charger):
      - "module/v1/ff/NodeRed/CHRG0/state"
      - "module/v1/ff/NodeRed/CHRG0/connection"
      - "module/v1/ff/NodeRed/CHRG0/factsheet"
      
      # NodeRed Status Topic:
      - "module/v1/ff/NodeRed/status"
      
    subscribed_topics: []  # Node-RED Publisher ist NUR Publisher, nie Subscriber

  # Node-RED Subscriber (MQTT → OPC-UA Bridge)
  # HINWEIS: Basierend auf APS-NodeRed Architektur (verified)
  #   - Subscribiert zu Commands von CCU/Dashboard
  #   - Transformiert MQTT → OPC-UA für alle Module
  #   - Liest States aus OPC-UA (NICHT aus MQTT!)
  nodered_sub_mqtt_client:
    active: false
    client_class: "NoderedSubMqttClient"
    client_id: "omf_nodered_sub"  # Dynamisch
    published_topics: []  # Node-RED Subscriber ist NUR Subscriber, nie Publisher

    subscribed_topics:
      # ==============================================================================
      # CCU-Commands (für System-Steuerung)
      # ==============================================================================
      - "ccu/global"                  # Global Commands
      - "ccu/set/reset"               # System Reset
      - "ccu/control"                 # Control Commands
      - "ccu/control/command"         # Specific Control Commands
      - "ccu/control/order"           # Order Control Commands
      - "ccu/order/request"           # Order Request (für Workflow-Context)
      - "ccu/order/active"            # Active Orders (für orderId Enrichment)
      - "ccu/pairing/state"           # Module Pairing State
      
      # ==============================================================================
      # Module Commands (MQTT → OPC-UA Transformation)
      # ==============================================================================
      # Instant Actions:
      - "module/v1/ff/SVR3QA0022/instantAction"    # HBW
      - "module/v1/ff/SVR4H76449/instantAction"    # DRILL
      - "module/v1/ff/SVR3QA2098/instantAction"    # MILL
      - "module/v1/ff/SVR4H76530/instantAction"    # AIQS
      - "module/v1/ff/SVR4H73275/instantAction"    # DPS
      - "module/v1/ff/CHRG0/instantAction"         # CHRG
      
      # Production Orders (KRITISCH - NodeRed transformiert zu OPC-UA):
      - "module/v1/ff/SVR3QA0022/order"            # HBW Production Commands
      - "module/v1/ff/SVR4H76449/order"            # DRILL Production Commands
      - "module/v1/ff/SVR3QA2098/order"            # MILL Production Commands
      - "module/v1/ff/SVR4H76530/order"            # AIQS Production Commands
      - "module/v1/ff/SVR4H73275/order"            # DPS Production Commands
      - "module/v1/ff/CHRG0/order"                 # CHRG Production Commands 


  # TXT-AIQS Controller (SPEKULATIV - noch nicht implementiert in OMF2)
  # HINWEIS: Basierend auf APS-TXT-AIQS Architektur
  #   - Publiziert Sensor-Daten (cam, ldr, bme680) via MQTT
  #   - Publiziert AIQS Module State/Connection direkt via MQTT (bypasses NodeRed)
  #   - Subscribiert zu TXT Control Commands
  txt_aiqs_mqtt_client:
    active: false
    client_class: "TxtAiqsMqttClient"
    # client_id: "auto-B9109AD9"  # Dynamisch, TXT-AIQS IP: 192.168.0.103
    published_topics:
      # ==============================================================================
      # TXT Sensor Data (FROM TXT-AIQS)
      # ==============================================================================
      - "/j1/txt/1/i/cam"             # Camera-Daten (Image Quality Check)
      - "/j1/txt/1/i/ldr"             # LDR Sensor-Daten (Light Detection)
      - "/j1/txt/1/i/bme680"          # BME680 Sensor-Daten (Temp, Humidity, Pressure, Gas)
      - "/j1/txt/1/i/broadcast"       # Broadcast Messages
      
      # ==============================================================================
      # TXT Function Output Topics (FROM TXT)
      # ==============================================================================
      - "/j1/txt/1/f/o/order"         # Order FROM TXT (optional order trigger)
      - "/j1/txt/1/f/o/stock"         # Stock FROM TXT (HBW inventory)
      - "/j1/txt/1/f/o/status"        # Status FROM TXT
      - "/j1/txt/1/f/o/error"         # Error FROM TXT
      
      # ==============================================================================
      # AIQS Module Topics (Direct MQTT - bypasses NodeRed for telemetry)
      # ==============================================================================
      - "module/v1/ff/SVR4H76530/state"       # AIQS State (direct from TXT)
      - "module/v1/ff/SVR4H76530/connection"  # AIQS Connection (direct from TXT)
      - "module/v1/ff/SVR4H76530/factsheet"   # AIQS Factsheet (direct from TXT)
      
    subscribed_topics:
      # ==============================================================================
      # TXT Control Topics (Commands TO TXT - Sensor-Steuerung)
      # ==============================================================================
      - "/j1/txt/1/c/bme680"          # BME680 Sensor Control
      - "/j1/txt/1/c/cam"             # Camera Control
      - "/j1/txt/1/c/ldr"             # LDR Sensor Control
      
      # ==============================================================================
      # TXT Function Input Topics (Commands TO TXT)
      # ==============================================================================
      - "/j1/txt/1/f/i/order"         # Order TO TXT
      - "/j1/txt/1/f/i/status"        # Status Request TO TXT
      - "/j1/txt/1/f/i/error"         # Error Notification TO TXT
      - "/j1/txt/1/f/i/config/hbw"    # HBW Configuration TO TXT
      
      # ==============================================================================
      # TXT Output Topics (Commands TO TXT)
      # ==============================================================================
      - "/j1/txt/1/o/broadcast"       # Broadcast Commands TO TXT

  # TXT-DPS Controller (SPEKULATIV - noch nicht implementiert in OMF2)
  # HINWEIS: Basierend auf APS-TXT-DPS Architektur
  #   - Publiziert DPS Module State/Connection direkt via MQTT (bypasses NodeRed)
  #   - Subscribiert zu Sensor-Daten von TXT-AIQS (shared /j1/txt/1/i/* topics)
  #   - Subscribiert zu CCU Order Topics (für Display-Anzeige)
  txt_dps_mqtt_client:
    active: false
    client_class: "TxtDpsMqttClient"
    # client_id: "auto-AC941349"  # Dynamisch, TXT-DPS IP: 192.168.0.102
    published_topics:
      # ==============================================================================
      # DPS Module Topics (Direct MQTT - bypasses NodeRed for telemetry)
      # ==============================================================================
      - "module/v1/ff/SVR4H73275/state"       # DPS State (direct from TXT)
      - "module/v1/ff/SVR4H73275/connection"  # DPS Connection (direct from TXT)
      - "module/v1/ff/SVR4H73275/factsheet"   # DPS Factsheet (direct from TXT)
      
    subscribed_topics:
      # ==============================================================================
      # TXT Sensor Data (FROM TXT-AIQS - shared topics)
      # ==============================================================================
      - "/j1/txt/1/i/cam"             # Camera-Daten (von TXT-AIQS)
      - "/j1/txt/1/i/ldr"             # LDR Sensor-Daten (von TXT-AIQS)
      - "/j1/txt/1/i/bme680"          # BME680 Sensor-Daten (von TXT-AIQS)
      - "/j1/txt/1/i/broadcast"       # Broadcast Messages
      
      # ==============================================================================
      # TXT Control Topics (Commands TO TXT)
      # ==============================================================================
      - "/j1/txt/1/c/bme680"          # BME680 Sensor Control
      - "/j1/txt/1/c/cam"             # Camera Control
      - "/j1/txt/1/c/ldr"             # LDR Sensor Control
      
      # ==============================================================================
      # TXT Function Input Topics (Commands TO TXT)
      # ==============================================================================
      - "/j1/txt/1/f/i/order"         # Order TO TXT
      - "/j1/txt/1/f/i/status"        # Status Request TO TXT
      - "/j1/txt/1/f/i/error"         # Error Notification TO TXT
      - "/j1/txt/1/f/i/config/hbw"    # HBW Configuration TO TXT
      
      # ==============================================================================
      # TXT Output Topics (Commands TO TXT)
      # ==============================================================================
      - "/j1/txt/1/o/broadcast"       # Broadcast Commands TO TXT
      
      # ==============================================================================
      # CCU Topics (für Display-Anzeige auf DPS)
      # ==============================================================================
      - "ccu/pairing/state"           # Module/FTS Availability
      - "ccu/order/active"            # Active Orders (für Display)
      - "ccu/order/completed"         # Completed Orders (für Display)

  # TXT-FTS Controller (SPEKULATIV - noch nicht implementiert in OMF2)
  # HINWEIS: Basierend auf APS-TXT-FTS Architektur
  #   - Publiziert FTS State/Connection/Factsheet direkt via MQTT
  #   - Subscribiert zu FTS Navigation Orders von CCU-Backend
  #   - Kommuniziert NUR via MQTT (kein OPC-UA, kein NodeRed)
  txt_fts_mqtt_client:
    active: false
    client_class: "TxtFtsMqttClient"
    # client_id: "auto-F6DFC829"  # Dynamisch, TXT-FTS IP: 192.168.0.105
    published_topics:
      # ==============================================================================
      # FTS Topics (Direct MQTT - kein NodeRed, kein OPC-UA)
      # ==============================================================================
      - "fts/v1/ff/5iO4/state"        # FTS State (position, battery, load, actionState)
      - "fts/v1/ff/5iO4/connection"   # FTS Connection Status (LWT)
      - "fts/v1/ff/5iO4/factsheet"    # FTS Capabilities (VDA5050)
      
    subscribed_topics:
      # ==============================================================================
      # FTS Navigation Commands (FROM CCU-Backend)
      # ==============================================================================
      - "fts/v1/ff/5iO4/order"        # FTS Navigation Order (mit UUID, nodes, edges)

  # TXT-CGW Controller (SPEKULATIV - noch nicht implementiert in OMF2)
  # HINWEIS: TXT-CGW = Cloud Gateway
  #   - Publiziert NodeRed Status Topic
  #   - Keine Subscriptions (nur Publisher)
  txt_cgw_mqtt_client:
    active: false
    client_class: "TxtCgwMqttClient"
    # client_id: "auto-9BD9E2A9"  # Dynamisch, TXT-CGW IP: 192.168.0.104
    published_topics:
      # ==============================================================================
      # NodeRed Status (Health-Check)
      # ==============================================================================
      - "module/v1/ff/NodeRed/status" # NodeRed Service Health/Availability
      
    subscribed_topics: []  # TXT-CGW ist nur Publisher

# QoS-Patterns (Info)
qos_patterns:
  qos_0: ["instantAction"]  # Sofort-Aktionen
  qos_1: ["state", "connection", "sensor"]  # Status und Sensoren
  qos_2: ["critical", "pairing", "camera"]  # System-kritische Daten

# Retain-Patterns (Info)
retain_patterns:
  retain_0: ["instantAction", "sensor", "order"]  # Temporäre Nachrichten
  retain_1: ["state", "connection", "camera", "factsheet"]  # Persistente Nachrichten
